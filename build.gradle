plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'com.jpa2'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
    // queryDSL 설정
//	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
//	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	// p6spy 적용
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'
	
	// jwt
	implementation 'com.auth0:java-jwt:4.4.0'
	
	// QueryDSL
//	implementation 'com.querydsl:querydsl-jpa:5.0.0' // 작동
//	implementation 'com.querydsl:querydsl-apt:5.0.0' // 작동
	
	implementation "com.querydsl:querydsl-core:5.0.0" //== 최종 ==//
	implementation "com.querydsl:querydsl-collections" //== 최종 ==//
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta") //== 최종 ==//
	
//	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta' // 작동안함
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta" // 작동
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta" //== 최종 ==//
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	
//	implementation 'com.querydsl:querydsl-jpa'
//	implementation 'com.querydsl:querydsl-apt'

//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
//	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api' //== 최종 ==//
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0" //== 최종 ==//
	
	testImplementation ('org.springframework.boot:spring-boot-starter-test') //== 최종 ==//
	testImplementation 'jakarta.persistence:jakarta.persistence-api' //== 최종 ==//
	testImplementation 'com.querydsl:querydsl-jpa:5.0.0' //== 최종 ==//
	
//	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta" // 작동안함
//	annotationProcessor 'com.querydsl:querydsl-apt:jpa'
//	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
//	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
//	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//	implementation "com.querydsl:querydsl-core"
//	implementation "com.querydsl:querydsl-collections"
//	annotationProcessor "jakarta.persistence:jakarta.persistence-api" // java.lang.NoClassDefFoundError (javax.annotation.Entity) 대응 코드
//	annotationProcessor "jakarta.annotation:jakarta.annotation-api" // java.lang.NoClassDefFoundError (javax.annotation.Generated) 대응 코드
}

tasks.named('test') {
	useJUnitPlatform()
}

//== QueryDSL 추가 시작 ==//

def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
	main.java.srcDir querydslDir
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

/*
def querydslDir =  "src/main/generated"

querydsl {
	library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslDefault = true
    querydslSourcesDir = querydslDir
}

sourceSets {
	main { 
		java {
			srcDirs = ['src/main/java', querydslDir] 
		}
	}
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

*/
//== QueryDSL 추가 끝 ==//




//def generated = 'src/main/generated'
//def querydslSrcDir = 'src/main/generated/querydsl'

//clean {
//	delete file(querydslSrcDir)
//}

//tasks.withType(JavaCompile) {
//	options.generatedSourceOutputDirectory = file(querydslSrcDir)
//}

//def generated = 'src/main/generated'
//def querydslSrcDir = 'src/main/generated/querydsl'

//tasks.withType(JavaCompile) {
//	options.generatedSourceOutputDirectory = file(querydslSrcDir)
//}

// java source set 에 QueryDSL Q class 위치 추가
// QueryDSL 생성 파일 위치 -> 이를 설정해주지 않으면 build 디렉토리에 생성되는데, 인텔리제이에서 문제가 될수도 있음
// IntelliJ 빌드 시 스캔하는 영역과 Gradle 빌드 시 스캔하는 영역이 달라서 발생하는 오류 해결
//sourceSets {
//	main.java.srcDirs += [ generated ]
//}


// gradle clean 시에 QClass 디렉토리 삭제
//clean {
//	delete file(generated)
//}